<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CannotCastDoubleNaN" xml:space="preserve">
    <value>不能将Double.NaN转换为ColumnValue类型的对象，OTS不支持值为NaN的Double值，请避免使用。</value>
  </data>
  <data name="ColumnValueCannotBeDecoded" xml:space="preserve">
    <value>解码返回结果中列的值时出现错误。</value>
  </data>
  <data name="EndpointNotSupportedProtocal" xml:space="preserve">
    <value>不支持终结点给定的协议。仅支持HTTP协议，即终结点必须以"http://"开头。</value>
  </data>
  <data name="InvalidPagingKeyLength" xml:space="preserve">
    <value>指定分页键的值无效。该值必须为0，或小于表（Table）结构或视图（View）中定义的主键个数的正数。</value>
  </data>
  <data name="NameFormatIsInvalid" xml:space="preserve">
    <value>表（Table）、表组（Table Group）、视图（View）、主键（Primary Key）或列（Column）的名称无效。OTS中名称必须由数字、英文字母或下划线组成，其中英文字母大小写敏感，数字不能作为第一个字符，名称的总长度不能超过100个字符。</value>
  </data>
  <data name="NoPrimaryKeySpecified" xml:space="preserve">
    <value>需要至少给定一个主键（Primary Key）。</value>
  </data>
  <data name="NoRowForBatchModifyData" xml:space="preserve">
    <value>rowChanges中至少需要包含一行数据。</value>
  </data>
  <data name="OpenTableServiceExceptionMessageFormat" xml:space="preserve">
    <value>请求失败，原因： {0}；OTS错误代码: {1}。</value>
  </data>
  <data name="OpenTableServiceInvalidResponseMessageFormat" xml:space="preserve">
    <value>请求的返回结果验证失败，原因：{0}。</value>
  </data>
  <data name="PKInfNotAllowed" xml:space="preserve">
    <value>当正向读取时，PrimaryKeyRange.InfMin和PrimaryKeyRange.InfMax只能依次应用于PrimaryKeyRange.RangeBegin和PrimaryKeyRange.RangeEnd。当反向读取时，PrimaryKeyRange.InfMin和PrimaryKeyRange.InfMax只能依次应用于PrimaryKeyRange.RangeEnd和PrimaryKeyRange.RangeBegin。</value>
  </data>
  <data name="PrimaryKeyValueIsNullOrEmpty" xml:space="preserve">
    <value>主键（Primary Key）的值无效，不能为空引用或值为长度是零的字符串。</value>
  </data>
  <data name="QueryTopValueNotSet" xml:space="preserve">
    <value>必须显式地给定Top属性的值，且必须大于或等于0。</value>
  </data>
  <data name="QueryTopValueOutOfRange" xml:space="preserve">
    <value>值必须大于或等于零。</value>
  </data>
  <data name="RangeBeginGreaterThanRangeEnd" xml:space="preserve">
    <value>当正向读取时，主键范围的起始值需要小于或等于结束值。当反向读取时，主键范围的起始值需要大于或等于结束值。整型按数字大小比较；字符型按字典顺序比较；布尔型的false小于true；任何类型的值均大于PrimaryKeyRange.InfMin且小于PrimaryKeyRange.InfMax。</value>
  </data>
  <data name="RangeNotSet" xml:space="preserve">
    <value>主键范围的没有设置，请先设置Range属性。</value>
  </data>
  <data name="RangeTypeNotMatch" xml:space="preserve">
    <value>rangeBegin和rangeEnd的数据类型必须与给定主键的数据类型相匹配。</value>
  </data>
  <data name="ResponseDataIncomplete" xml:space="preserve">
    <value>返回结果数据不完整。</value>
  </data>
  <data name="ResponseDoesNotContainHeader" xml:space="preserve">
    <value>返回结果缺失头“{0}”。</value>
  </data>
  <data name="ResponseExpired" xml:space="preserve">
    <value>返回结果超时。</value>
  </data>
  <data name="ResponseFailedAuthorization" xml:space="preserve">
    <value>返回验证失败。</value>
  </data>
  <data name="UnsupportedEncodingFormat" xml:space="preserve">
    <value>此版本的SDK只支持Base64格式的数据编码。请考虑升级SDK以支持编码{0}。</value>
  </data>
  <data name="ValueCastFailedFormat" xml:space="preserve">
    <value>解析失败，无法将值转换转换为{0}类型。</value>
  </data>
  <data name="ValueCastInvalidTypeFormat" xml:space="preserve">
    <value>值的数据类型不是{0}。</value>
  </data>
  <data name="InvalidResponseMessage" xml:space="preserve">
    <value>RequestID: {0}, HostID: {1}。</value>
  </data>
</root>